# (C) Copyright 2024- ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.


name: Build Python Wheel for Linux

on:
  # Trigger the workflow manually
  workflow_dispatch: ~

  # Allow to be called from another workflow
  workflow_call: ~

  # TODO automation trigger

jobs:

  build:

    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]
    # TODO which manylinux do we want to build for? 2014? 2_28? 2_34? Matrix?
    container: eccr.ecmwf.int/wheelmaker/2_28:latest

    name: Build manylinux_2_28

    steps:
      - uses: actions/checkout@v2
      - run: /buildscripts/compile.sh ./eckit/python_wrapper/buildconfig

      ################################################################
      - run: /buildscripts/wheel-linux.sh ./eckit/python_wrapper/buildconfig 3.11
      - uses: actions/upload-artifact@v4
        name: Upload wheel 3.11
        with:
          name: wheel-manylinux2_28-3.11
          path: /build/wheel/*.whl

      # TODO other python versions, once the above is correct.
      # NOTE if Matrix, then break into (compile) && (wheel & upload)@[matix] steps

  test:

    needs: build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"] # ["3.8", "3.9", "3.10", "3.11", "3.12"] # TODO enable

    name: Test with ${{ matrix.python-version }}
    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]
    container: eccr.ecmwf.int/wheelmaker/2_28:latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v4
        with:
          name: wheel-manylinux2_28-${{ matrix.python-version }}
      - run: /buildscripts/test-wheel.sh ${{ matrix.python-version }}

  deploy:

    if: ${{ github.ref_type == 'tag' || github.event_name == 'release' }}
    needs: [test, build]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"] # ["3.8", "3.9", "3.10", "3.11", "3.12"] # TODO enable

    name: Deploy wheel ${{ matrix.python-version }}
    runs-on: [self-hosted, Linux, platform-builder-Rocky-8.6]
    container: eccr.ecmwf.int/wheelmaker/2_28:latest
    steps:
      - run: mkdir artifact-${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v4
        with:
          name: wheel-manylinux2_28-${{ matrix.python-version }}
          path: artifact-${{ matrix.python-version }}
      - run: |
      		/buildsripts/upload-twine.sh ${{ matrix.python-version }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
